#include <WiFi.h>
#include <WebServer.h>

const char* ssid = "FFNET";
const char* password = "W4tchTh3G4M3*";

const int relayPin = 2;  // Change for Relay 2 (e.g., 18)
bool relayState = false; // false=OFF, true=ON

WebServer server(80);

// Function to send response with CORS header
void sendCORS(String contentType, String content) {
  server.sendHeader("Access-Control-Allow-Origin", "*");  // <--- Allow Dashboard to fetch
  server.send(200, contentType, content);
}

// Web page to see relay state and buttons
String relayPage() {
  String stateText = relayState ? "ON" : "OFF";
  String colorClass = relayState ? "on" : "off";

  String html = R"rawliteral(
  <!DOCTYPE html>
  <html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
      body { font-family: Arial; text-align: center; margin: 40px; }
      .state { font-size: 24px; font-weight: bold; }
      .on { color: green; }
      .off { color: red; }
      button { padding: 10px 20px; font-size: 16px; margin-top: 20px; cursor: pointer; }
    </style>
  </head>
  <body>
    <h1>ESP32 Relay</h1>
    <div class="state )rawliteral" + colorClass + R"rawliteral(">)" + stateText + R"rawliteral(</div>
    <button onclick="location.href='/relay/on'">Turn ON</button>
    <button onclick="location.href='/relay/off'">Turn OFF</button>
  </body>
  </html>
  )rawliteral";
  return html;
}

// Handlers
void handleRoot() { sendCORS("text/html", relayPage()); }

void handleOn() {
  digitalWrite(relayPin, HIGH);
  relayState = true;
  sendCORS("text/plain", "ON");
}

void handleOff() {
  digitalWrite(relayPin, LOW);
  relayState = false;
  sendCORS("text/plain", "OFF");
}

void handleState() {
  sendCORS("text/plain", relayState ? "ON" : "OFF");
}

void setup() {
  Serial.begin(115200);
  pinMode(relayPin, OUTPUT);
  digitalWrite(relayPin, LOW); // Start OFF

  // Connect to WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected!");
  Serial.print("Relay ESP32 IP: ");
  Serial.println(WiFi.localIP());

  // Define endpoints
  server.on("/", handleRoot);
  server.on("/relay/on", handleOn);
  server.on("/relay/off", handleOff);
  server.on("/relay/state", handleState);

  server.begin();
}

void loop() {
  server.handleClient();
}
